- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-07-01 18:17:58'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Two short tips for FFI bindings : ezyang’s blog'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[http://blog.ezyang.com/2011/02/two-short-tips-for-ffi-binding/](http://blog.ezyang.com/2011/02/two-short-tips-for-ffi-binding/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Two short tips for FFI bindings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Subject: [Haskell-cafe] Please review my Xapian foreign function interface'
  prefs: []
  type: TYPE_NORMAL
- en: Thanks Oliver!
  prefs: []
  type: TYPE_NORMAL
- en: 'I haven''t had time to look at your bindings very closely, but I do have a
    few initial things to think about:'
  prefs: []
  type: TYPE_NORMAL
- en: You're writing your imports by hand. Several other projects used to do this,
    and it's a pain in the neck when you have hundreds of functions that you need
    to bind and you don't quite do it all properly, and then you segfault because
    there was an API mismatch. Consider using a tool like [c2hs](http://blog.ezyang.com/2010/06/the-haskell-preprocessor-hierarchy/)
    which rules out this possibility (and reduces the code you need to write!)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I see a lot of unsafePerformIO and no consideration for interruptibility or
    thread safety. People who use Haskell tend to expect their code to be thread-safe
    and interruptible, so we have high standards ;-) But even C++ code that looks
    thread safe may be mutating shared memory under the hood, so check carefully.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I use Sup, so I deal with Xapian on a day-to-day basis. Bindings are good to
    see.
  prefs: []
  type: TYPE_NORMAL
