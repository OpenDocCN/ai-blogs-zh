["```\n#if       defined(__ccdoc__)\ntypedef platform_dependent_type ABC_PTRUINT_T;\n#elif     defined(LIN64)\ntypedef unsigned long ABC_PTRUINT_T;\n#elif     defined(NT64)\ntypedef unsigned long long ABC_PTRUINT_T;\n#elif     defined(NT) || defined(LIN) || defined(WIN32)\ntypedef unsigned int ABC_PTRUINT_T;\n#else\n   #error unknown platform\n#endif /* defined(PLATFORM) */\n\n```", "```\ntype ABC_PTRUINT_T = {#type ABC_PTRUINT_T #}\n\n```", "```\ntype ABC_PTRUINT_T = CLong\n\n```", "```\nenum Abc_VerbLevel\n{\n   ABC_PROMPT   = -2,\n   ABC_ERROR    = -1,\n   ABC_WARNING  =  0,\n   ABC_STANDARD =  1,\n   ABC_VERBOSE  =  2\n};\n\n```", "```\n{#enum Abc_VerbLevel {underscoreToCase} deriving (Show, Eq) #}\n\n```", "```\ndata Abc_VerbLevel = AbcPrompt | AbcError | AbcWarning | AbcStandard | AbcVerbose\n  deriving (Show, Eq)\ninstance Enum Abc_VerbLevel\n  fromEnum AbcPrompt = -2\n  -- ...\n\n```", "```\n{#enum Abc_VerbLevel {AbcPrompt, AbcError, AbcWarning, AbcStandard, AbcVerbose} #}\n\n```", "```\n{#enum Abc_VerbLevel as AbcVerbLevel {underscoreToCase} #}\n\n```", "```\nstruct foobar {\n  int foo;\n  int bar;\n}\n\n```", "```\n{#pointer *foobar as FoobarPtr -> Foobar #}\n\n```", "```\ntype FoobarPtr = Ptr Foobar\n\n```", "```\n    data Foobar\n    {#pointer *foobar as FoobarPtr -> Foobar #}\n\n    ```", "```\n    {#pointer *foobar as FoobarPtr newtype #}\n\n    ```", "```\n    newtype FoobarPtr = FoobarPtr (Ptr FoobarPtr)\n\n    ```", "```\n    {#pointer *foobar -> Foobar nocode #}\n\n    ```", "```\n    -- if it was struct Foobar...\n    {#pointer *Foobar #}\n\n    ```", "```\n    typedef struct Foobar*   FoobarPtr\n    {#pointer FoobarPtr #}\n\n    ```", "```\n{#import Foobar.Internal.Common #}\n\n```"]