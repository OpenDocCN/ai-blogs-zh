["```\n{-# LANGUAGE ForeignFunctionInterface #-}\n\nimport Foreign.C.Types\nimport Foreign.StablePtr\nimport Control.Monad\n\nlazy :: [CInt]\nlazy = [1..]\n\nmain = do\n    pLazy <- newStablePtr lazy\n    test pLazy -- we let C deallocate the stable pointer with cfree\n\nchead = liftM head . deRefStablePtr\nctail = newStablePtr . tail <=< deRefStablePtr\ncfree = freeStablePtr\n\nforeign import ccall test :: StablePtr [CInt] -> IO ()\nforeign export ccall chead :: StablePtr [CInt] -> IO CInt\nforeign export ccall ctail :: StablePtr [CInt] -> IO (StablePtr [CInt])\nforeign export ccall cfree :: StablePtr a -> IO ()\n\n```", "```\n#include <HsFFI.h>\n#include <stdio.h>\n#include \"Main_stub.h\"\n\nvoid test(HsStablePtr l1) {\n    int x = chead(l1);\n    printf(\"first = %d\\n\", x);\n    HsStablePtr l2 = ctail(l1);\n    int y = chead(l2);\n    printf(\"second = %d\\n\", y);\n    cfree(l2);\n    cfree(l1);\n}\n\n```", "```\nName:                export\nVersion:             0.1\nCabal-version:       >=1.2\nBuild-type:          Simple\n\nExecutable export\n  Main-is:             Main.hs\n  Build-depends:       base\n  C-sources:           export.c\n\n```"]