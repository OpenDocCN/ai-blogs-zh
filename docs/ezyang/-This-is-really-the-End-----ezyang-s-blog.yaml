- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-07-01 18:17:27'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-07-01 18:17:27'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: '“This is really the End.” : ezyang’s blog'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: “这真的是结束了。”：ezyang的博客
- en: 来源：[http://blog.ezyang.com/2012/09/feit-thompson-true/](http://blog.ezyang.com/2012/09/feit-thompson-true/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://blog.ezyang.com/2012/09/feit-thompson-true/](http://blog.ezyang.com/2012/09/feit-thompson-true/)
- en: '*Done.* This adjective rarely describes any sort of software project—there
    are always more bugs to fix, more features to add. But on September 20th, early
    one afternoon in France, Georges Gonthier did just that: he slotted in the last
    component of a six year project, with the laconic commit message, "This is really
    the End."'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*完成。* 这个形容词很少用来描述任何种类的软件项目——总会有更多的错误需要修复，更多的功能需要添加。但在法国的一个早上，9月20日，乔治·戈西埃确实做到了：他完成了一个为期六年的项目的最后一个组成部分，带着简洁的提交消息，“这真的是结束了。”'
- en: 'It was complete: [the formalization of the Feit-Thompson theorem.](http://www.msr-inria.inria.fr/events-news/feit-thompson-proved-in-coq)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 它已经完成：[费特-汤普森定理的形式化。](http://www.msr-inria.inria.fr/events-news/feit-thompson-proved-in-coq)
- en: If you’re not following the developments in interactive theorem proving or the
    formalization of mathematics, this achievement may leave you scratching your head
    a little. What is the Feit-Thompson theorem? What does it mean for it to have
    been formalized? What was the point of this exercise? Unlike the [four coloring
    theorem](http://en.wikipedia.org/wiki/Four_color_theorem) which Gonthier and his
    team tackled previously in 2005, the Feit-Thompson theorem (also known as the
    odd order theorem) is not easily understandable by non-mathematician without a
    background in group theory (I shall not attempt to explain it). Nor are there
    many working mathematicians whose lives will be materially impacted by the formalization
    of this particular theorem. But there is a point; one that can be found between
    the broad motivation behind the computer-assisted theorem proving and the fascinating
    social context surrounding the Feit-Thompson theorem.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有跟上互动定理证明或数学形式化的发展，这一成就可能会让你有些摸不着头脑。费特-汤普森定理是什么？它被形式化意味着什么？这项工作的意义何在？不像2005年戈西埃和他的团队先前攻克的四色定理，费特-汤普森定理（也称为奇次阶定理），对非数学背景的人来说不容易理解，特别是没有群论背景的人（我不打算解释它）。也没有许多工作中的数学家的生活会因为这个特定定理的形式化而受到实质影响。但这其中确实有一些意义；这一点可以在计算机辅助定理证明背后的广泛动机和费特-汤普森定理周围引人入胜的社会背景之间找到。
- en: 'While the original vision of automated theorem proving, articulated by David
    Hilbert, was one where computers completely replaced mathematicians in the work
    of proving theorems (mathematicians would be consigned to dreaming up interesting
    theorem statements to prove), modern researchers in the formalization of mathematics
    consider the more modest question of whether or not a proof is true. That is to
    say, humans are fallible and can make mistakes while reviewing the proofs of their
    colleagues, while the computer is an idiot-savant who, once spoon-fed the contents
    of a proof, is essentially infallible in its judgment of correctness. The proofs
    of undergraduate mathematics classes don’t really need this treatment (after all,
    they have been inflicted on countless math majors over the centuries), but there
    are a few areas where this extra boost of confidence is really appreciated:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然由大卫·希尔伯特提出的自动定理证明的原始愿景是完全由计算机代替数学家完成证明定理的工作（数学家将被限制在想出有趣的定理声明来证明），但现代数学形式化研究人员考虑的更为谨慎的问题是一个证明是否真实。也就是说，人类是有过失的，他们在审查同事的证明时可能会犯错误，而计算机是一个白痴-天才，一旦被喂养了一个证明的内容，它在判断正确性方面基本上是不可辜负的。大学数学课程的证明实际上并不需要这种处理（毕竟，它们在数个世纪以来一直在影响着无数的数学专业人员），但确实有一些领域，这种额外的信心增强是非常受欢迎的：
- en: In theorems which are found in conventional software systems, due to the large
    number of incidental details making proofs superficial but large,
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传统软件系统中发现的定理中，由于大量的细枝末节使得证明表面而大，
- en: In extremely tricky, consistently unintuitive areas of mathematics, including
    questions of provability and soundness, and
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在极其棘手且一贯不直观的数学领域，包括可证性和合理性问题，
- en: In extremely long and involved proofs, for which traditional verification by
    human mathematicians is a Herculean task.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在极其冗长和复杂的证明中，传统的人类数学家验证是一项艰巨的任务。
- en: 'It is in this last area that we can really place both the Four Color Theorem
    and the Feit-Thompson Theorem. The Four Color Theorem’s original proof was controversial
    because of its reliance on a computer to solve 1936 special cases which the proof
    depended on. The Feit-Thompson Theorem is a bit of an annoyance to many mathematicians,
    due to its length: 255 pages, the global structure of which has resisted over
    half a century of attempts at simplification. And it itself is just a foothill
    on the way to the monster theorem that is the classification of finite simple
    groups (comprising tens of thousands of pages of proof.)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 正是在这最后的领域，我们可以真正地将四色定理和 Feit-Thompson 定理放置在一起。四色定理的原始证明因其依赖计算机解决了 1936 个特例而备受争议。Feit-Thompson
    定理对许多数学家来说有些讨厌，因为其长度为 255 页，其全局结构已经抵抗了半个多世纪的简化尝试。它本身仅仅是通向有限简单群分类定理的一座小山（包括数以万页计的证明）。
- en: Formalizing the entirety of the Feit-Thompson is a technical achievement which
    applies computer-assisted theorem proving to a tremendously nontrivial mathematical
    proof, and does so in a setting where the ability to state “Feit-Thompson is True”
    has non-zero information content. It demonstrates that theorem proving in Coq
    *does* scale (at least, well enough pull off a proof of this scale) and it has
    generated a large toolbox for handling features of real mathematics including
    heavily overloaded notation and handing the composition of many, disparate theories
    (all of which the proof draws upon).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 正式化整个 Feit-Thompson 定理是一个技术成就，它将计算机辅助定理证明应用于一个极为非平凡的数学证明，并在能够陈述“Feit-Thompson
    真实”具有非零信息内容的情况下进行。这表明 Coq 中的定理证明*确实*可扩展（至少在足够完成这一规模证明的程度上），并为处理实际数学特征提供了一个大型工具箱，包括使用频繁的符号重载和处理许多不同理论的组合（这些证明都依赖于这些理论）。
- en: 'Of course, there is one niggling concern: what if there is a bug, and what
    Gonthier and his team have proved is not *actually* the Feit-Thompson Theorem?
    A story I once heard while I was at Galois was of a research intern who had been
    tasked with proving some theorems. He had some trouble at first, but eventually
    pulled off the first theorem and moved to the next, gradually gaining speed. Eventually,
    his advisor took a look at these proofs and realized that he had been taking advantage
    of a soundness problem in the proof checker to solve the proofs. I wonder if this
    is a story that wizened PhD students tell the first years to give them nightmares.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，还有一个微小的担忧：如果存在漏洞，Gonthier 和他的团队所证明的并*不实际上*是 Feit-Thompson 定理呢？我曾在 Galois
    时听过一个故事，一个研究实习生被委以证明一些定理的任务。起初他遇到了一些困难，但最终完成了第一个定理，并转向下一个，逐渐加快了速度。最终，他的导师审视了这些证明，并意识到他一直在利用证明检查器中的完整性问题来解决这些证明。我想知道这是否是有经验的博士生向新生讲的一个让他们做噩梦的故事。
- en: But I think the risk of this is very low. The mechanized proof follows the original
    quite closely, and so a wrong definition or a soundness bug is likely only to
    pose a local problem for the proof that can be easily solved. Indeed, if there
    is a problem with the proof that is so great that the proof must be thrown out
    and done again, that would be very interesting—it would say something about the
    original proof as well. That would be surprising, and worthy of attention, for
    it could mean the end of the proof of the Feit-Thompson Theorem as we know it.
    But I don’t think we live in that world.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 但我认为这种风险非常低。机械化证明与原始证明非常接近，因此错误的定义或完整性错误可能只会对证明造成局部问题，可以轻松解决。确实，如果证明存在如此严重的问题，以至于必须丢弃并重新做，那将是非常有趣的事情——这将对原始证明也有所启示。这将是令人惊讶的，值得关注的，因为这可能意味着我们所知的
    Feit-Thompson 定理的终结。但我不认为我们生活在这样的世界中。
- en: Pop the champagne, and congratulations to Gonthier and his team!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为 Gonthier 及其团队祝贺，让我们开香槟庆祝！
