- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-07-01 18:18:03'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-07-01 18:18:03
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'My first proof in Isabelle : ezyang’s blog'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我在Isabelle中的第一个证明：ezyang’s blog
- en: 来源：[http://blog.ezyang.com/2010/11/my-first-proof-in-isabelle/](http://blog.ezyang.com/2010/11/my-first-proof-in-isabelle/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://blog.ezyang.com/2010/11/my-first-proof-in-isabelle/](http://blog.ezyang.com/2010/11/my-first-proof-in-isabelle/)
- en: 'One of the distinctive differences between academic institutions in the United
    States and in Great Britain is the supplementary learning outside of lectures.
    We have *recitations* in the US, which are something like extra lectures, while
    in the UK they have *tutorials*, or *supervisions* as they are called in Cambridge
    parlance. As always, they are something of a mixed bag: some supervisors are terrible,
    others are merely competent, and others inspire and encourage a sort of interest
    in the subject far beyond the outlines of the course.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 美国和英国学术机构之间的一个显著差异是课外补充学习。在美国，我们有*课后讲习班*，类似额外的讲座，而在英国，他们有*教程*，或者按剑桥的说法称为*辅导*。正如往常一样，它们是一种混合包：一些导师很糟糕，其他人则仅仅称职，还有些则激发并鼓励对课程主题的兴趣，远远超出课程大纲的范围。
- en: Nik Sultana, our *Logic and Proof* supervisor, is one of these individuals.
    For our last supervision, on something of a whim (egged on by us, the supervisees),
    he suggested we attempt to prove the following logical statement in [Isabelle](http://www.cl.cam.ac.uk/research/hvg/Isabelle/),
    the proof assistant that he has been doing his research with.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 尼克·苏尔塔纳（Nik Sultana），我们的*逻辑与证明*监督员，就是这样的人物之一。在我们最后一次辅导中，凭借一时的冲动（我们这些被监督者的怂恿），他建议我们尝试在[Isabelle](http://www.cl.cam.ac.uk/research/hvg/Isabelle/)中证明以下逻辑陈述，这是他一直在进行研究的证明助手。
- en: I first worked out the sequent calculus proof for the statement (left as an
    exercise for the reader), and then I grabbed Isabelle, downloaded the manual,
    fired up Proof General, and began my very first proof in Isabelle.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我首先推导了关于该命题的序言演算证明（留给读者作为练习），然后我找到了Isabelle，下载了手册，启动了Proof General，开始了我在Isabelle中的第一个证明。
- en: '* * *'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '*Syntax.* The first problem I had was getting a minimal theory to compile.
    This was because Isabelle requires you to always have an imports line, so I provided
    `Main` as an import.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*语法.* 我遇到的第一个问题是得到一个最小的理论以编译。这是因为Isabelle要求你始终有一个imports行，所以我提供了`Main`作为一个import。'
- en: I then tried proving a trivial theory, A --> A and got tripped by stating "by
    (impI)" instead of "by (rule impI)" (at this point, it was still not clear what
    'rule' actually did).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我尝试证明一个微不足道的理论，A --> A，并因为声明为“by (impI)”而被绊倒，而不是“by (rule impI)”（在这一点上，仍然不清楚‘rule’实际上是做什么的）。
- en: 'I tried proving another theory, conj_rule, straight from the documentation,
    but transcribed the Unicode to ASCII wrong and ended up with a theory that didn''t
    match the steps they did. (This was one annoying thing about reading the manual,
    though I understand why they did it.) Eventually I realized what was wrong, and
    decided to actually start the proof:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我尝试证明另一个理论，即`conj_rule`，直接参考文档，但是我把Unicode转录成ASCII时出错了，最终得到了一个与他们所做步骤不符的理论。（这是阅读手册的一个让人恼火的事情，尽管我理解他们为什么这样做。）最终我意识到了问题所在，并决定实际开始证明：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: I first tried non-dot notation, but that failed to syntax check so I introduced
    dots for all bound variables.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我首先尝试了非点记法，但语法检查失败了，所以我为所有绑定变量引入了点。
- en: '* * *'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '*Semantics.* The proof was simple:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*语义.* 这个证明很简单：'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: But that was cheating :-)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，那是作弊 :-)
- en: 'At this point, I felt pretty out-of-the-water: Isabelle uses a natural deduction
    system, whereas (through my studies) I had the most experience reasoning with
    equivalences, the sequent calculus, or the tableau calculus (not to mention I
    had a sequent calculus proof already in hand). As it would turn out, removing
    the quantifiers would look exactly like it would in normal sequent calculus, but
    I hadn''t realized it yet.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我感到很不自在：Isabelle使用自然演绎系统，而（通过我的学习）我最有经验的是等价推理、序言演算或表演演算（更不用说我已经掌握了序言演算的证明）。事实证明，移除量词后看起来确实像在正常的序言演算中一样，但我还没有意识到这一点。
- en: I stumbled around, blindly applying `allE`, `allI`, `exE` and `exI` to see what
    they would. I hadn't realized the difference between `rule`, `drule` and `erule`
    yet, so occasionally I'd apply a rule and get a massive expansion in subgoals,
    and think to myself, "huh, that doesn't seem right."
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我摸索着，盲目地应用`allE`、`allI`、`exE`和`exI`，看看它们会做什么。我还没有意识到`rule`、`drule`和`erule`之间的区别，所以偶尔我会应用一个规则，得到大量的子目标展开，然后对自己说：“嗯，这似乎不对啊。”
- en: 'Finally, reading backwards from the universals section, I realized that `==>`
    was a little different from `-->`, representing a meta-implication that was treated
    specially by some rules, so I converted to it:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，从通用部分反向阅读，我意识到 `==>` 与 `-->` 有些不同，代表着一种元蕴含，某些规则对其特别对待，所以我将其转换为它：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once again, I tried applying the universal rules and generally didn''t manage
    to make the formula look pretty. Then I looked more closely at the Isabelle examples
    and noticed they used `[| P; Q |]`, not `P & Q` on the left hand side of `==>`,
    so I found the appropriate rule to massage the formula into this form (the semicolon
    is the sequent calculi''s colon). I then realized that there was this thing `erule`,
    although I still thought you simply applied it when the rule had an E at the end:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 再一次，我试图应用通用规则，通常无法使公式看起来漂亮。然后我更仔细地查看了伊莎贝尔的示例，注意到它们在 `==>` 的左侧使用了 `[| P; Q |]`，而不是
    `P & Q`，所以我找到了适当的规则将公式整理成这种形式（分号是序言演算的冒号）。然后我意识到还有这个 `erule` 的东西，虽然我仍然认为当规则末尾有
    E 时只需应用它：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '* * *'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '*Proof.* Everyone loves coding by permuting, so I permuted through the rules
    again. This time, `exE` seemed to keep the formula simple, and after a few seconds
    of head-scratching, would have also been the right thing to do in a sequent calculus
    proof. I also realized I was doing backwards proof (that is, we take our goals
    and break them down into subgoals), and suddenly the implication statements in
    the manual made a lot more sense (look at the right side, not the left!):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*证明。* 每个人都喜欢通过排列来编码，所以我再次通过规则。这一次，`exE` 似乎使公式保持简单，经过几秒钟的思考，也应该是序言演算证明中正确的做法。我也意识到我正在进行反向证明（即，我们将我们的目标分解为子目标），突然手册中的蕴含语句更加清晰了（看右侧，而不是左侧！）：'
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This next step took a while. I was fairly easily able to apply `(erule allE)`,
    which eliminated the universal on the right side of the equation, but it introduced
    a fresh skolem function and that didn't seem like what I wanted. I also knew that
    I should theoretically be able to eliminate the right-hand-side existential, but
    couldn't figure out what rule I should use. Trying the usual rules resulted in
    nonsense, though I think at this point I had figured out when to use the various
    variants of `rule`. Eventually, I reread the substituting a variable explicitly
    section of the manual, cargo-culted the `drule_tac` syntax, and it worked!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的步骤花费了一些时间。我很容易地应用了 `(erule allE)`，这消除了方程右侧的全称量词，但引入了一个新的斯科莱姆函数，这似乎不是我想要的。我也知道理论上我应该能够消除右侧的存在量词，但无法弄清楚应该使用什么规则。尝试使用通常的规则结果很荒谬，尽管我认为在这一点上我已经搞清楚了何时使用各种
    `rule` 的变体。最终，我重新阅读了手册中显式替换变量部分，脑补了 `drule_tac` 语法，它奏效了！
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Experienced Isabellers will have realized that I could eliminate the right
    exists, but since I had concluded that this was not possible, I went on a detour.
    I decided to try combining some of the my assumptions to get some useful conclusions.
    Right now the proof state was:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有经验的伊莎贝尔将会意识到我可以消除右侧的存在量词，但因为我已经得出结论这是不可能的，所以我选择了绕道而行。我决定尝试结合一些我的假设来得出一些有用的结论。此时，证明状态如下：
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'I felt I ought to be able to get `P x` on the left-hand side, and then apply
    some existential rule because of the true statement `P x ==> (EX x. P x)`. But
    none of the implication rules or modus ponens applied properly. I also tried swapping
    over the assumption and goal using contrapositive:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得我应该能够在左侧得到 `P x`，然后应用一些存在量词规则，因为真语句 `P x ==> (EX x. P x)`。但是没有一条蕴含规则或假言推理适用得恰当。我还尝试使用反证法交换假设和目标：
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Actually, I had wanted the implication on the right side. Nevertheless, the
    existential was on the left, so I should have been able to eliminate it... except
    there was a negation so the rule failed.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我希望蕴含物在右侧。然而，存在量词在左侧，所以我本应该能够消除它……但有一个否定，所以规则失败了。
- en: 'More reading revealed that I could use some special syntax to make the implication
    go on the right side:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步阅读揭示了我可以使用一些特殊的语法将蕴含物放在右侧：
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: But once again, the conditional prevented me from doing my evil plan of destructing
    the implication and deriving a contradiction in the assumptions.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 但再次，条件使我无法执行我的邪恶计划，破坏推论并在假设中推导出矛盾。
- en: 'So I went back, played some more, and eventually figured out that to eliminate
    an existential from the goal side, you *introduce* it (backwards!) And I also
    found out that `_tac` could work for basically any rule:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我回头去，再玩了一些，最终发现从目标端消除存在量的方法是*引入*它（倒过来！）我还发现`_tac`可以适用于基本上任何规则：
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'At this point it was a simple propositional proof to prove, and my previous
    adventures with contraposative gave me an idea how to do it:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，这是一个简单的命题证明，而我之前对反证法的探索给了我一个做法的想法：
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Sweet. After I finished the proof, I went back and removed the tacs and checked
    if Isabelle was able to unify the variables itself; it was, but the intermediate
    proof goals looked uglier so I added them back in. And that concluded my very
    first proof in Isabelle. It''s not much, but it involved enough wandering that
    I felt quite pleased when I finished. Here''s the whole thing:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Sweet。在我完成证明后，我回头去掉了`tacs`，并检查了一下伊莎贝尔是否能够自行统一变量；她可以，但中间的证明目标看起来更丑，所以我又把它们加了回去。这样就完成了我在伊莎贝尔中的第一个证明。这并不算多，但其中的漫步足以让我在完成时感到相当满意。以下是整个过程：
- en: '[PRE11]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
