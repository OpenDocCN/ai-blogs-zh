- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-07-01 18:18:00'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-07-01 18:18:00
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Thriller: Doing it for the thrills : ezyang’s blog'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Thriller: Doing it for the thrills : ezyang’s blog'
- en: 来源：[http://blog.ezyang.com/2010/12/thriller/](http://blog.ezyang.com/2010/12/thriller/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://blog.ezyang.com/2010/12/thriller/](http://blog.ezyang.com/2010/12/thriller/)
- en: 'How do you decide what to work on? I started thinking about this topic when
    I was wasting time on the Internet because I couldn’t think of anything to do
    that was productive. This seemed kind of strange: there were lots of things I
    *needed* to do: vacations to plan, projects to work on, support requests to answer,
    patches to merge in, theorems to prove, blog posts to write, papers to read, etc.
    So maybe the problem wasn’t that I didn’t have anything to do, it was just that
    I had too much stuff to do, and that I needed to pick something.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你如何决定要做什么工作？ 当我在因为找不到有益的事情做而在互联网上浪费时间时，我开始思考这个问题。 这似乎有点奇怪：有很多事情我 *需要* 做：计划假期，处理项目，回答支持请求，合并补丁，证明定理，撰写博客文章，阅读论文等等。
    所以问题可能不是我没有什么可做的，而是我有太多的事情要做，我需要挑选一些事情。
- en: This choice is nontrivial. That evening, I didn’t feel like organizing my priorities
    either, so I just ended up just [reading some comics](http://www.viruscomix.com/),
    rationalizing it—erm, I mean filing it—under “Rest and Relaxation.” I could have
    chosen what to do based on some long term plan... yeah right, like I have a long
    time plan. It seems more practical to have chosen to do something enjoyable (which,
    when not involving reading comics, can occasionally involve productive work),
    or something that would give me a little high at the end, a kind of *thrill* from
    finishing—not necessarily fun when starting off, but fulfilling and satisfying
    by the end.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这个选择并不琐碎。 那天晚上，我也不想整理我的优先事项，所以最终只是 [阅读一些漫画](http://www.viruscomix.com/) ，告诉自己——呃，我是说归档在“休息和放松”下。
    我本可以基于长期计划来选择做什么... 是的，像我有长期计划一样。 看起来更实际的是选择做一些令人愉快的事情（当不涉及阅读漫画时，偶尔会涉及到生产性工作），或者完成后会带来一点满足感的事情，从开始时并不一定有趣，但到了结束时却是充实而令人满足。
- en: So what’s thrilling? In the famous book *The Structure of Scientific Revolutions*,
    Thomas Kuhn argued that what most scientists do is “normal science”, problem solving
    in the current field without any expectation of making revolutionary discoveries
    or changing the way we do science. This is a far cry from the idealistic vision
    ala “When I grow up, I want to be a scientist and discover a cure for cancer”—it
    would truly be thrilling to manage that. But if the life of an ordinary scientist
    is so mundane and so unlikely to result in a revolution, why do incredibly smart
    people dedicate their lives in the pursuit of scientific knowledge? What is thrilling
    about science?
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 那么什么是令人兴奋的呢？ 在著名书籍 *科学革命的结构* 中，托马斯·库恩（Thomas Kuhn）认为，大多数科学家所做的是“正常科学”，在当前领域进行问题解决，没有期望进行革命性的发现或改变我们进行科学研究的方式。
    这与“当我长大后，我想成为一名科学家，并发现治愈癌症的方法”的理想化愿景相去甚远 - 要真正做到这一点确实令人兴奋。 但是，如果普通科学家的生活如此平凡，并且不太可能导致革命，为什么那些非常聪明的人要把他们的生命奉献给科学知识的追求？
    科学有什么令人兴奋的地方呢？
- en: 'Kuhn suggests that this may because humans love solving puzzles, and science
    is the ultimate puzzle solving activity: there is some hitherto unexplained phenomena,
    and a scientist attempts fit this phenomena into the existing theories and paradigms.
    And so while the average person may not find the in-depth analysis of a single
    section of DNA of a single obscure virus very interesting, for the scientist this
    generates endless puzzles for them to solve, each step of the way adding some
    knowledge, however small, to our civilization. And we humans find puzzles thrilling:
    they occupy us and give us that *satisfaction* when they are solved.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 库恩（Kuhn）认为，这可能是因为人类喜欢解决谜题，而科学是终极解谜活动：存在一些迄今未能解释的现象，科学家试图将这些现象与现有的理论和范 paradigm
    中。 因此，尽管普通人可能不会对单个不知名病毒的 DNA 片段的深入分析感兴趣，但对科学家来说，这为他们提供了无数个谜题需要解决，而每一步都向我们的文明增加了一些知识，无论多么微小。
    我们人类发现谜题令人兴奋：他们吸引我们并在解决时给予我们 *满足感* 。
- en: 'For a software engineer, the thrill may be in the creation of something that
    works and is useful to others (the rush of having users) or the thrill may be
    in having solved a particularly tricky problem (the rush that comes after you
    solve a tricky debugging session, or the rush when you do something very clever).
    The types of thrill you prefer dictate the kind of learning you are interested
    in. If you seek the thrill of creation, you will work on gaining the specialized
    knowledge of specific tools, libraries and applications that you will need in
    your craft. You will pursue knowledge outside of mere “programming”: aesthetics,
    design, psychology, marketing and more: the creation of a product is a truly interdisciplinary
    problem. If you seek the thrill of debugging (the hacker), you will seek specialized
    knowledge of a different kind, painstaking knowledge of the wire structure of
    protocols, source code, memory layout, etc. And if you seek the thrill of scientific
    problem solving, you will seek generalized, abstract knowledge, knowledge that
    suggests new ways of thinking about and doing things.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于软件工程师来说，兴奋可能在于创造出对他人有用且实用的东西（有用户的兴奋），或者兴奋可能在于解决特别棘手的问题（在解决棘手的调试会话后感到的兴奋，或者当你做了非常聪明的事情时感到的兴奋）。你偏爱的兴奋类型决定了你感兴趣的学习类型。如果你追求创造的兴奋，你将努力获得特定工具、库和应用程序的专业知识，这些在你的工艺中是必需的。你将追求超越单纯的“编程”：审美、设计、心理学、营销等等：产品的创造是一个真正跨学科的问题。如果你追求调试的兴奋（黑客），你将寻求不同类型的专业知识，对协议的线结构、源代码、内存布局等的苦心知识。如果你追求科学问题解决的兴奋，你将寻求广义、抽象的知识，这些知识提出了关于思考和做事的新方法。
- en: 'The steps towards each type of thrill are interrelated, but only to a certain
    degree. I remember a graduate student once telling me, “If you really want to
    make sure you understand something, you should go implement it. But sometimes
    this is counterproductive, because you spend so much time trying to make it work
    that you forget about the high level principles involved.” In this mindset, something
    becomes clear: not all knowledge is created equal. The first time I learn how
    to use a web framework, I acquire generalist knowledge—how a web framework might
    be put together, what functionality it is supposed to have and design idioms—as
    well as specialist knowledge—how this particular web framework works. But the
    next time I learn a different web framework, the generalist knowledge I gain is
    diminished. Repeat enough times, and all that’s left are implementation details:
    there is no element of surprise. (One caveat: at the limit, learning many, many
    web frameworks can give you some extra generalist knowledge simply by virtue of
    having seen so much. We might call this *experience.*)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 通向每种类型的兴奋的步骤是相关的，但只到一定程度。我记得一位研究生曾经告诉我：“如果你真的想确保自己理解了某件事情，你应该去实现它。但有时这是适得其反的，因为你花了太多时间让它运行起来，而忘记了所涉及的高层原则。”在这种思维方式下，一些事情变得清晰起来：并非所有的知识都是平等的。第一次学习如何使用一个Web框架时，我获得了广义知识——一个Web框架可能如何组合在一起，它应该具备什么功能和设计习惯——以及专业知识——这个特定的Web框架如何工作。但下次学习一个不同的Web框架时，我获得的广义知识就减少了。重复足够多次，剩下的只有实施细节：没有惊喜的元素了。（有一个警告：在极限情况下，学习很多很多Web框架可以通过看到这么多东西，给你一些额外的广义知识。我们可以称之为*经验*。）
- en: For me, this presents an enormous conundrum. I want to create things! But creation
    requires contiguous chunks of time, which are rare and precious, and requires
    a constellation of generalist knowledge (the idea) and specialist knowledge (the
    details). So when I don’t have several weeks to devote to a single project (aka
    never), what should I do?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，这带来了一个巨大的难题。我想要创造东西！但是创造需要连续的时间块，这种时间是稀有且宝贵的，同时也需要广义知识（理念）和专业知识（细节）。所以当我没有几周的时间来专注于一个项目（也就是从来没有），我应该怎么办呢？
- en: 'I’m not sure what I should do, but I have a vague sense for what my current
    rut is: alternate between working on projects that promise to give some generalist
    knowledge (whether it’s a short experiment for a blog post or hacking in the majestic
    mindbending landscape that is GHC) and slugging through my specialist maintenance
    workload. It... works, although it means I do a bit more writing and system administration
    than coding these days. *C''est la vie.*'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我不确定我应该做什么，但我对我的当前套路有一种模糊的感觉：在进行项目工作之间轮流（无论是为博客文章做的短期实验还是在 GHC 这个宏大而迷幻的心智领域中进行黑客攻击），以及应对我专业维护工作的负担。虽然有点意思，但这意味着我现在比起编程，更多地从事写作和系统管理工作。*C'est
    la vie.*
