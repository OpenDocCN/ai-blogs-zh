- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-07-01 18:18:01'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-07-01 18:18:01'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Talk Friday : ezyang’s blog'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 讲座周五：ezyang 的博客
- en: 来源：[http://blog.ezyang.com/2010/12/talk-friday/](http://blog.ezyang.com/2010/12/talk-friday/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://blog.ezyang.com/2010/12/talk-friday/](http://blog.ezyang.com/2010/12/talk-friday/)
- en: I’ve had the pleasure of attending a number of really interesting talks over
    the past few months, so many that I couldn’t find time to write thorough articles
    for each of them as I did over the summer. So you’ll have to forgive me for putting
    two of them in compressed form here. There is something of a common theme of recasting
    a problem on a different input domain in order to achieve results, as I hope will
    become evident by these summaries.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 过去几个月里，我参加了许多非常有趣的讲座，以至于我无法像在夏季那样为每一个写详尽的文章。因此，我只好在这里压缩其中的两个。这些摘要显示出重新构思问题在不同输入领域上以达成结果的一种共同主题，希望这一点通过这些摘要变得显而易见。
- en: '* * *'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '*A Language for Mathematics* by [Mohan Ganesalingam](http://people.pwf.cam.ac.uk/mg262/).
    *Big idea:* Apply linguistics and natural language processing techniques to mathematical
    language—the type found in textbooks and proofs.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*一个用于数学的语言* by [Mohan Ganesalingam](http://people.pwf.cam.ac.uk/mg262/)。*大思想：*
    将语言学和自然语言处理技术应用于数学语言——这类语言在教科书和证明中都能找到。'
- en: 'Ganesalingam has big goals: his long term project is to “enable computers to
    do mathematics in the same way that humans do.” “But wait,” you may say, “aren’t
    we already approaching this with proof assistants?” Unfortunately, the answer
    to this is no: proof assistants are quite good at capturing rigorous formal reasoning,
    but are terrible at actually capturing the soft ideas that mathematicians gesture
    at when writing proofs and textbooks. The first step in this program is understanding
    this mathematical language—thus, the title of his talk.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Ganesalingam 的目标宏大：他的长期项目是“使计算机能够像人类一样进行数学运算。”“但等等，”你可能会说，“我们不是已经通过证明助手在接近这一目标吗？”不幸的是，对此的答案是否定的：证明助手在捕捉严格的形式推理方面做得很好，但在捕捉数学家在撰写证明和教科书时所指的软性思想方面则做得很糟糕。这个项目的第一步是理解这种数学语言——因此，他的讲话标题如此命名。
- en: 'Why do we have any reason to believe that this program will be any more successful
    than current research in linguistics and NLP? After all, most papers and textbooks
    use English interspersed with mathematical notation, and grand ideas about semantic
    analysis have given way to more effective but theoretically less appealing statistical
    methods. Ganesalingam makes some key observations here: in essence, mathematical
    language has the right dose of formality to make traditionally hard problems tractable.
    Only a small lexicon is necessary, and then mathematical terms can be defined
    in terms of other mathematical terms, and in many cases, there is a clear semantics
    for a mathematical statement: we can in principle translate it into a statement
    in higher order logic.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有什么理由相信这个项目会比当前的语言学和自然语言处理研究更成功？毕竟，大多数论文和教科书使用英语并穿插数学符号，关于语义分析的宏大理念已经让位于更有效但在理论上较不吸引人的统计方法。Ganesalingam
    在这里做出了一些关键观察：本质上，数学语言具有适当的形式化程度，使传统上难以解决的问题变得可行。只需要一个小型词汇表，然后可以将数学术语定义为其他数学术语，并且在许多情况下，数学陈述有明确的语义：原则上我们可以将其翻译为高阶逻辑的陈述。
- en: 'Further reading: [Slides for a similar presentation that was given at Stanford](http://people.pwf.cam.ac.uk/mg262/CSLI%20talk.pdf),
    [an informal non-technical introduction](http://people.pwf.cam.ac.uk/mg262/GanesalingamMsum.pdf),
    [author''s homepage](http://people.pwf.cam.ac.uk/mg262/).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步阅读：[斯坦福的类似演示幻灯片](http://people.pwf.cam.ac.uk/mg262/CSLI%20talk.pdf)，[非正式的非技术介绍](http://people.pwf.cam.ac.uk/mg262/GanesalingamMsum.pdf)，[作者的个人主页](http://people.pwf.cam.ac.uk/mg262/)。
- en: '* * *'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '*Evaluating Formulas on Graphs* by [Anuj Dawar](http://www.cl.cam.ac.uk/~ad260/).
    There are really two big ideas here. *Big idea 1.* Generalize graph problems into
    the question “does this first-order logical formula hold on this graph?”, treating
    your algorithm as a function on two inputs: the graph and the logical formula.
    *Big idea 2.* Use graph structure theory to characterize what input spaces of
    graphs we can efficiently solve these FO formulas for.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*在图上评估公式* by [Anuj Dawar](http://www.cl.cam.ac.uk/~ad260/)。这里真正有两个大思想。*大思想1：*
    将图问题概括为问题“这个一阶逻辑公式在这个图上成立吗？”，将您的算法视为对两个输入的函数：图和逻辑公式。*大思想2：* 使用图结构理论来描述我们可以有效解决这些FO公式的图输入空间。'
- en: 'First big idea: the study of graph problems is frequently focused on an individual
    graph problem at a time: after all, being able to assume a concrete problem instance
    makes it easier to reason about things. What Dawar’s talk introduces is a way
    to talk about large classes of graph problems by bundling them up into logics
    (of various shapes and sizes.) Existential second-order logic gives you all NP
    problems (Fagin); first-order logic is more restrictive but admits better analysis.
    Separating out the formula from your problem also lets you apply parametrized
    complexity theory: the formula is an input to your algorithm, and you set it constant
    or vary it. Unfortunately, the problem (even for fixed graphs) is still PSPACE-complete,
    so we need another way to get a grip on the problem.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个重要观点：图问题的研究经常集中在一个个单独的图问题上：毕竟，能够假设一个具体的问题实例使得推理变得更加容易。Dawar 的讲座介绍的是通过将它们打包到各种形状和大小的逻辑中，来讨论大类图问题的方法。存在第二阶逻辑给出所有
    NP 问题（Fagin）；一阶逻辑更加限制但允许更好的分析。将公式从你的问题中分离出来还允许你应用参数化复杂性理论：公式是算法的输入，你可以将其设置为常数或者变化。不幸的是，即使对于固定的图形，问题仍然是
    PSPACE 完全的，所以我们需要另一种方法来掌握问题。
- en: 'Second big idea: restrict the input graphs in order to make the algorithms
    tractable. This involves a bit of graph theory knowledge which I’m not going to
    attempt to summarize, but there are some really nice results in this area:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个重要观点：限制输入图以使算法可处理。这涉及到一些图论知识，我不打算总结，但在这个领域确实有一些非常好的结果：
- en: 'Seese (1996): For the class of graphs with degree bounded by k, every FO definable
    property is decidable in linear time.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Seese（1996年）：对于度数受限于 k 的图的类别，每一个 FO 可定义属性在线性时间内可判定。
- en: 'Frick and Grohe (2001): For the class of graphs of local tree-width bounded
    by a function f, every FO definable property is decidable in quadratic time.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Frick 和 Grohe（2001年）：对于局部树宽度受函数 f 限制的图的类别，每一个 FO 可定义属性在二次时间内可判定。
- en: 'Flum and Grohe (2001): For the class of graphs excluding K_k as a minor, every
    FO definable property is decidable in O(n^5).'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flum 和 Grohe（2001年）：对于排除 K_k 作为子图的图的类别，每一个 FO 可定义属性在 O(n^5) 的时间内可判定。
- en: One oddball fact is that Flum and Grohe’s O(n^5) bound on complexity has a constant
    factor which may not be computable.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个奇怪的事实是，Flum 和 Grohe 在复杂性上的 O(n^5) 的界限有一个不可计算的常数因子。
- en: 'By the end, we get to the edge of research: he introduces a new class of graphs,
    *nowhere dense* graphs, motivates why we have good reason to think this characterizes
    tractability, and says that they hope to establish FO is fixed parameter tractable.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们来到研究的边缘：他介绍了一类新的图，*无处稠密* 图，阐明了为什么我们有充分的理由认为这样的特性是可处理的，并表示他们希望建立 FO 是固定参数可处理的。
- en: 'A quick aside: one of the things I really enjoy about well-written theoretical
    research talks is that they often introduce me to subfields of computer science
    that I would not have otherwise encountered. This presentation was a whirlwind
    introduction to graph theory and parametrized complexity theory, both topics I
    probably would not have otherwise considered interesting, but afterwards I had
    tasted enough of to want to investigate further. I think it is quite commendable
    for a researcher doing highly abstract work to also be giving seminars working
    up the background knowledge necessary to understand their results.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一个快速的旁白：我真正喜欢写得很好的理论研究讲座的一件事是，它们经常向我介绍我可能不会否则接触到的计算机科学的子领域。这个演示是对图论和参数化复杂性理论的一个风驰电掣的介绍，这两个主题我可能原本认为不那么有趣，但之后我尝试了足够多，想进一步调查。我认为，对于一个从事高度抽象工作的研究人员来说，也要进行讲座，以积累理解其结果所需的背景知识，是非常值得赞赏的。
- en: 'Further reading: [Full course on these topics](http://phdopen.mimuw.edu.pl/index.php?page=z10w1)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步阅读：[这些主题的完整课程](http://phdopen.mimuw.edu.pl/index.php?page=z10w1)
