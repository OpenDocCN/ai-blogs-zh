["```\nmodule Hello (frontendPlugin) where\n\nimport GhcPlugins\nimport DriverPhases\nimport GhcMonad\n\nfrontendPlugin :: FrontendPlugin\nfrontendPlugin = defaultFrontendPlugin {\n  frontend = hello\n  }\n\nhello :: [String] -> [(String, Maybe Phase)] -> Ghc ()\nhello flags args = do\n    liftIO $ print flags\n    liftIO $ print args\n\n```", "```\nimport GHC.Paths\nimport System.Posix.Process\nimport System.Environment\n\nmain = do\n  args <- getArgs\n  let interactive = \"--interactive\" `elem` args\n      args' = do\n        arg <- args\n        case arg of\n          \"--interactive\" ->\n            [\"--frontend\", \"Hello\",\n             \"-plugin-package\", \"hello-plugin\"]\n          _ -> return arg\n  executeFile ghc False (args' ++ if interactive then [\"-user-package-db\"] else []) Nothing\n\n```", "```\nname:                hello-plugin\nversion:             0.1.0.0\nlicense:             BSD3\nauthor:              Edward Z. Yang\nmaintainer:          ezyang@cs.stanford.edu\nbuild-type:          Simple\ncabal-version:       >=1.10\n\nlibrary\n  exposed-modules:     Hello\n  build-depends:       base, ghc >= 8.0\n  default-language:    Haskell2010\n\nexecutable hello-plugin\n  main-is:             HelloWrapper.hs\n  build-depends:       base, ghc-paths, unix\n  default-language:    Haskell2010\n\n```"]