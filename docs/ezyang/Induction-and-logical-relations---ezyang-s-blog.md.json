["```\nWN : (τ : Tp) → [] ⊢ τ → Set\nWN τ e = e ⇓\n\n```", "```\nWN : (τ : Tp) → [] ⊢ τ → Set\nWN τ e = e ⇓ × WN' τ e\n\n```", "```\nWN' : (τ : Tp) → [] ⊢ τ → Set\nWN' bool e = Unit\n\n```", "```\nWN' (τ1 ⇒ τ2) e = (e1 : [] ⊢ τ1) → WN τ1 e1 → WN τ2 (app e e1)\n\n```", "```\ndata Vec : Set → Nat → Set where\n  vnil : {A : Set} → Vec A 0\n  vcons : {A : Set} → A → Vec A n → Vec A (S n)\n\n```", "```\nVec : Set → Nat → Set\nVec A 0 = Unit\nVec A (S n) = A × Vec A n\n\n```", "```\ndata WN' : τ → [] ⊢ τ → Set where\n  WN/bool : {e : [] ⊢ bool} → WN' bool e\n  WN/⇒ : {e1 : [] ⊢ τ1} → (WN τ1 e1 → WN τ2 (app e e1)) → WN' (τ1 ⇒ τ2) e\n\n```", "```\ndata V'⟦_⟧ : (τ : Tp) → [] ⊢ τ → [] ⊢ τ → Set where\n   V/bool-#t : V'⟦ bool ⟧ #t #t\n   V/bool-#f : V'⟦ bool ⟧ #f #f\n   V/⇒ : {τ₁ τ₂ : Tp} {e₁ e₂ : [] ,, τ₁ ⊢ τ₂}\n     → ((v₁ v₂ : [] ⊢ τ₁) → V'⟦ τ₁ ⟧ v₁ v₂ → E⟦ τ₂ ⟧ (subst1 v₁ e₁) (subst1 v₂ e₂))\n     → V'⟦ τ₁ ⇒ τ₂ ⟧ (lam e₁) (lam e₂)\n\n```", "```\nV⟦_⟧ : (τ : Tp) → [] ⊢ τ → [] ⊢ τ → Set\nV⟦ bool ⟧    #t #t = Unit\nV⟦ bool ⟧    #f #f = Unit\nV⟦ bool ⟧ _ _  = Void\nV⟦ τ₁ ⇒ τ₂ ⟧ (lam e) (lam e') = (v v' : [] ⊢ τ₁) → V⟦ τ₁ ⟧ v v' → E⟦ τ₂ ⟧ (subst1 v e) (subst1 v' e')\nV⟦ τ₁ ⇒ τ₂ ⟧ _ _ = Void\n\n```", "```\npV : {τ : Tp} → {e e' : [] ⊢ τ} → V⟦ τ ⟧ e e' → V'⟦ τ ⟧ e e'\npV {bool} {#t} {#t} V = V/bool-#t\npV {bool} {#t} {#f} ()\npV {bool} {#t} {if _ then _ else _} ()\npV {bool} {#t} {var _} ()\npV {bool} {#t} {app _ _} ()\npV {bool} {#f} {#t} ()\npV {bool} {#f} {#f} V = V/bool-#f\npV {bool} {#f} {if _ then _ else _} ()\npV {bool} {#f} {var _} ()\npV {bool} {#f} {app _ _} ()\npV {bool} {if _ then _ else _} ()\npV {bool} {var _} ()\npV {bool} {app _ _} ()\npV {_ ⇒ _} {if _ then _ else _} ()\npV {_ ⇒ _} {var _} ()\npV {_ ⇒ _} {lam _} {if _ then _ else _} ()\npV {_ ⇒ _} {lam _} {var _} ()\npV {_ ⇒ _} {lam _} {lam _} f = V/⇒ (\\ v v' V → pE (f v v' V))\npV {_ ⇒ _} {lam _} {app _ _} ()\npV {_ ⇒ _} {app _ _} ()\n\n```", "```\nV/⇒ : {τ₁ τ₂ : Tp} {e e' : [] ,, τ₁ ⊢ τ₂}\n  → (V : (v v' : [] ⊢ τ₁) → V⟦ τ₁ ⟧ v v' {- the critical position! -} → E'⟦ τ₂ ⟧ (subst1 v e) (subst1 v' e'))\n  → V'⟦ τ₁ ⇒ τ₂ ⟧ (lam e) (lam e')\n\n```"]