- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-07-01 18:18:17'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-07-01 18:18:17
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Databases are categories : ezyang’s blog'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库即范畴：ezyang的博客
- en: 来源：[http://blog.ezyang.com/2010/06/databases-are-categories/](http://blog.ezyang.com/2010/06/databases-are-categories/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://blog.ezyang.com/2010/06/databases-are-categories/](http://blog.ezyang.com/2010/06/databases-are-categories/)
- en: '*Update.* The video of the talk can be found here: [Galois Tech Talks on Vimeo:
    Categories are Databases](http://vimeo.com/channels/galois#12428370).'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*更新* 视频可以在这里找到：[Galois技术讲座 Vimeo: 类别即数据库](http://vimeo.com/channels/galois#12428370)。'
- en: On Thursday Dr. [David Spivak](http://math.mit.edu/~dspivak/) presented [Categories
    are Databases](http://vimeo.com/channels/galois/12428370) as a Galois tech talk.
    His slides are [here](http://math.mit.edu/~dspivak/informatics/talks/galois.pdf),
    and are dramatically more accessible than the paper [Simplicial databases](http://math.mit.edu/~dspivak/informatics/SD.pdf).
    Here is a short attempt to introduce this idea to people who only have a passing
    knowledge of category theory.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 上周四，博士[大卫·斯皮瓦克](http://math.mit.edu/~dspivak/)在Galois的技术讲座上，演讲了《[类别即数据库](http://vimeo.com/channels/galois/12428370)》。他的幻灯片在[这里](http://math.mit.edu/~dspivak/informatics/talks/galois.pdf)，比他的论文《[单纯数据库](http://math.mit.edu/~dspivak/informatics/SD.pdf)》更加易于理解。这里简要介绍这个概念，适合那些对范畴论只有初步了解的人士。
- en: An essential exercise when designing relational databases is the practice of
    object modeling using labeled graphs of objects and relationships. Visually, this
    involves drawing a bunch of boxes representing the objects being modeled, and
    then drawing arrows between the objects showing relationships they may have. We
    can then use this object model as the basis for a relational database schema.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计关系数据库时的一个重要练习是使用对象和关系的标记图进行对象建模。在视觉上，这涉及到绘制代表正在建模的对象的一堆框，并在对象之间画箭头显示它们可能具有的关系。然后，我们可以将这个对象模型作为关系数据库模式的基础。
- en: 'An example model from a software engineering class is below:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 软件工程课程中的一个例子模型如下：
- en: 'With the image of a object model in your head, consider Wikipedia''s definition
    of a category:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当你脑中有一个对象模型的形象时，请考虑维基百科对范畴的定义：
- en: 'In mathematics, a category is an algebraic structure consisting of **a collection
    of "objects", linked together by a collection of "arrows"** that have two basic
    properties: the ability to compose the arrows associatively and the existence
    of an identity arrow for each object.'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在数学中，一个范畴是一个由**一组“对象”组成的代数结构，它们通过一组“箭头”相互连接**，具有两个基本属性：箭头的可结合性和每个对象存在一个身份箭头。
- en: The rest of the definition may seem terribly abstract, but hopefully the bolded
    section seems to clearly correspond to the picture of boxes (objects) and arrows
    we drew earlier. Perhaps...
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 定义的其余部分可能看起来非常抽象，但希望粗体部分清晰地对应于我们之前绘制的框（对象）和箭头的图片。也许...
- en: '*Database schema = Category.*'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*数据库模式 = 范畴。*'
- en: Unfortunately, a directed graph is not *quite* a category; the secret sauce
    that makes a category a category are those two properties on the arrows, associative
    composition and identity, and if we really want to strengthen our claim that a
    schema is a category, we'll need to demonstrate these.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，一个有向图并不*完全*是一个范畴；使得范畴成为范畴的关键因素是箭头上的这两个属性，可结合性和身份性。如果我们真的想加强我们的论断，即模式是一个范畴，我们需要证明这些属性。
- en: Recall that our arrows are "relations," that is, "X occupies Y" or "X is the
    key for Y". Our category must have an identity arrow, that is, some relation "X
    to X". How about, "X is itself X", an almost vacuous statement, but one most certainly
    true. Identity arrow, *check.*
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，我们的箭头是“关系”，即“X占据Y”或“X是Y的关键”。我们的范畴必须有一个身份箭头，即某种关系“X到X”。那么，“X就是X”，一个几乎空洞的陈述，但绝对正确。身份箭头，*检查*。
- en: 'We also need to show associative composition of arrows. Composition of two
    arrows is much like they showed you when they were teaching you vector algebra:
    you take the head of one arrow (X to Y) and smush it with the tail of another
    (Y to Z), and you get another arrow (X to Z). If a "book has an author" and "an
    author has a favorite color", I can say "the book''s author has a favorite color".
    This composed statement doesn''t care who the author was... just what his favorite
    color is. In fact,'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要展示箭头的可结合性。两个箭头的组合很像他们在教你向量代数时所展示的：你拿一个箭头的头（从X到Y），并将它与另一个箭头的尾（从Y到Z）粘合在一起，你得到另一个箭头（从X到Z）。如果“书有作者”和“作者有最喜欢的颜色”，我可以说“书的作者有最喜欢的颜色”。这个组合的陈述并不关心作者是谁...
    只关心他最喜欢的颜色是什么。实际上，
- en: '*Arrow composition = Joins*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*箭头组合 = 连接*'
- en: That is, one of the fundamental features of a category, a feature that any nice
    result from pure category theory uses as if it were intuitively obvious, is one
    of the very techniques that does *not* seem obvious to someone reading about JOINs
    in the second half of a database tutorial.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，范畴的一个基本特征，任何纯范畴论中的好结果都使用它，仿佛它是直观显而易见的特性，是那些在数据库教程的后半部分读者看起来并不显而易见的技术之一。
- en: '(*Aside.* A foreign key relationship is intrinsically many to one: a foreign
    key field can only point to one record in another table, but many rows can have
    that field pointing to the same record. When doing relational modeling, we will
    frequently use many-to-many or one-to-many relationships. Any database administrator
    knows, however, that we can simply rewrite these into many to one relationships
    (reversing the arrow in the case of one-to-many and introducing a new table for
    many-to-many).)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: (*旁注.* 外键关系本质上是多对一的：外键字段只能指向另一个表中的一条记录，但许多行可以将该字段指向同一条记录。在关系建模时，我们经常使用多对多或一对多关系。然而，任何数据库管理员都知道，我们可以简单地将这些重新编写为多对一关系（在一对多情况下颠倒箭头，并引入新表以进行多对多关系）。)
- en: When we have a schema, we also want to have data to fill the schema. As it turns
    out, this also fits into a category-theoretic framework too, although a full explanation
    is out of scope for this post (I suggest consulting the slides.)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们有一个模式时，我们也希望有数据来填充这个模式。事实证明，这也适合范畴论框架，尽管完整的解释不在本文范围内（建议查看幻灯片）。
- en: '*Functor (C -> S) = data*'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*函子（C -> S）= 数据*'
- en: 'Why do you care? There are some good reasons mentioned by Spivak:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你为什么要关心这个？Spivak提到了一些好的理由：
- en: 'I''ll mention one of my own: SQL, while messy, is precise; it can be fed into
    a computer and turned into a databases that can do real work. On the other hand,
    relational models are high level but kind of mushy; developers may complain that
    drawing diagrams with arrows doesn''t seem terribly rigorous and that the formalism
    doesn''t really help them much.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我会提到我自己的一个例子：SQL虽然混乱，但是精确；它可以被输入计算机，并转化为可以进行实际工作的数据库。另一方面，关系模型是高层次的但有点模糊；开发者可能会抱怨，用箭头画图看起来并不是非常严格，形式主义并不真正帮助他们很多。
- en: Category theory is precise; it unambiguously assigns meaning and structure to
    the relations, the laws of composition define what relations are and aren't permissible.
    Category theory is not only about arrows (if it was it'd be pretty boring); rather,
    it has a rich body of results from many fields expressed in a common language
    that can "translated" into database-speak. In many cases, important category theory
    notions are tricky techniques in database administrator folklore. When you talk
    about arrows, you're talking a lot more than arrows. That's powerful!
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 范畴论是精确的；它明确地赋予关系意义和结构，组合法则定义了哪些关系是可允许的，哪些是不允许的。范畴论不仅仅是关于箭头（如果只有箭头的话会相当无聊）；相反，它拥有许多领域的丰富成果，用一种通用语言表达，可以“翻译”为数据库术语。在许多情况下，重要的范畴论概念是数据库管理员传说中棘手的技术。当你谈论箭头时，你谈论的远不止箭头。这是非常有力的！
