- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-07-01 18:16:50'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Rage bug reporting : ezyang’s blog'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[http://blog.ezyang.com/2021/04/rage-bug-reporting/](http://blog.ezyang.com/2021/04/rage-bug-reporting/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Rage bug reporting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At Facebook, we have an internal convention for tooling called "rage". When
    something goes wrong and you want to report a bug, the tool developer will typically
    ask you to give them a rage. For a command line tool, this can be done by running
    a rage subcommand, which will ask about which previous CLI invocation you'd like
    to report, and then giving you a bundle of logs to send to the developer.
  prefs: []
  type: TYPE_NORMAL
- en: 'A rage has an important property, compared to a conventional log level flag
    like `-v`: **rage recording is always on**. In other words, it is like traditional
    server application logs, but applied to client software. Logging is always turned
    on, and the rage subcommand makes it easy for a user to send only the relevant
    portion of logs (e.g., the logs associated with the command line invocation that
    is on).'
  prefs: []
  type: TYPE_NORMAL
- en: 'For some reason, rage functionality is not that common in open source tools.
    I can imagine any number of reasons why this might be the case:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding proper logging is like flossing--annoying to do at the time even when
    it can save you a lot of pain later.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Even if you have logging, you still need to add infrastructure to save the logs
    somewhere and let users retrieve them afterwards.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It's something of an art to write logs that are useful enough so that developer
    can diagnose the problem simply by "reading the tea leaves", but not so detailed
    that they slow down normal execution of the program. And don't forget, you better
    not expose private information!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Most programs are simple, and you can just fall back on the old standby of asking
    the user to submit reproduction instructions in their bug report.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Still, in the same way most sysadmins view logging as an invaluable tool for
    debugging server issues, I think rage reporting is an invaluable tool for debugging
    client issues. In ghstack, it didn''t take very many lines of code to implement
    rage reporting: [ghstack.logs](https://github.com/ezyang/ghstack/blob/master/ghstack/logs.py)
    (for writing the logs to the rage directory) and [ghstack.rage](https://github.com/ezyang/ghstack/blob/master/ghstack/rage.py)
    (for reading it out). But it has greatly reduced my support load for the project;
    given a rage, I can typically figure out the root cause of a bug without setting
    up a reproducer first.'
  prefs: []
  type: TYPE_NORMAL
