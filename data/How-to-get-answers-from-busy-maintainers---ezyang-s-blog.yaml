- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-07-01 18:18:07'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-07-01 18:18:07
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'How to get answers from busy maintainers : ezyang’s blog'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何从忙碌的维护者那里得到答案：ezyang's blog
- en: 来源：[http://blog.ezyang.com/2010/09/how-to-get-answers-from-busy-maintainers/](http://blog.ezyang.com/2010/09/how-to-get-answers-from-busy-maintainers/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://blog.ezyang.com/2010/09/how-to-get-answers-from-busy-maintainers/](http://blog.ezyang.com/2010/09/how-to-get-answers-from-busy-maintainers/)
- en: How to get answers from busy maintainers
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何从忙碌的维护者那里得到答案
- en: As one of those “busy maintainers,” I’ve noticed that I assume a certain cognitive
    mode when fielding support requests. This post is about how I deal with support
    requests, but I’ve also seen this behavior widely on other projects. While, as
    the person making the request, you may find such a mentality frustrating and obtuse,
    if you are a fellow developer you can use it in your favor.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 作为那些“忙碌维护者”之一，我注意到在处理支持请求时，我会假设一定的认知模式。本文讨论了我处理支持请求的方式，但我也广泛地看到这种行为在其他项目中普遍存在。虽然作为提出请求的人，你可能会觉得这种心态令人沮丧和迂腐，但如果你是一名同行开发者，你可以利用它来为自己谋利。
- en: What do I think when I see your support request?
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当我看到你的支持请求时，我会怎么想？
- en: '*I want to help you.* If I wasn’t interesting in answering your questions,
    I would have desupported this project. However...'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*我希望帮助你。* 如果我对回答你的问题没有兴趣，我早就停止支持这个项目了。但是...'
- en: '*I want to fix the issue with as little cognitive effort as possible.* I want
    to use my brain power thinking about new features and theory, not doing sleuthing
    for the user. Relatedly,'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*我希望尽可能用最少的认知努力来解决问题。* 我希望用我的脑力去思考新功能和理论，而不是为用户做侦探工作。相关地，'
- en: '*I want to fix the issue with as little real effort as possible.* If I have
    actually *do* things to figure out how to fix your problem, I’m more inclined
    to procrastinate on it. Add a doubling modifier if I’m not sure what I need to
    do. Paradoxically, if I have access to your setup, I might just go and *fix* it,
    because my usual debugging cycle is much faster than, “Ask you to try something
    or get some information and report it to me.”'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*我希望尽可能用最少的认知努力来解决问题。* 如果我实际上需要*做*一些事情来找出如何解决你的问题，我更倾向于拖延。如果我不确定需要做什么，可能会加倍努力。矛盾的是，如果我能够访问你的设置，我可能会直接去*修复*它，因为我的常规调试周期比“要求你尝试一些东西或获取一些信息并向我报告”的速度要快得多。'
- en: Notice that feature requests operate on a different set of rules. For scratch
    an itch software I may have little interest in features that don’t help me. But
    if I am going to put a feature in that doesn’t immediately help you, I want to
    do it right—just because it works for *you* doesn’t mean it should be in *my*
    codebase. And, of course, the moment it’s someone else trying to get code in,
    my code standards shoot way up.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意到特性请求遵循不同的规则。对于一些用来解决问题的软件，我可能对不帮助我的特性不感兴趣。但是，如果我要添加一个对你没有立即帮助的特性，我希望能做得正确——仅仅因为它对*你*有效果，并不意味着它应该在*我的*代码库中。当然，一旦有其他人试图加入代码，我的代码标准就会大幅提升。
- en: 'In accordance with these principals of benevolent laziness, answers to support
    requests you get might be:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循这些懒惰善意的原则，你得到的支持请求的答案可能是：
- en: Short,
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简而言之，
- en: A guess that it’s some common issue that you may have already noticed while
    Googling (you *did* try Googling it first, right?),
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 猜测它可能是一些常见问题，你可能在谷歌搜索时已经注意到了（*你确实*尝试过先谷歌搜索了，对吧？），
- en: Asking you for more (sometimes seemingly irrelevant) information,
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求你提供更多（有时看似无关紧要的）信息，
- en: Asking you to try something that may or may not work, and
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求你尝试一些可能有效或无效的方法，并
- en: Late. (I set aside some time every few weeks to go through their open tickets,
    and you won’t get an answer until then.)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 晚了。（我每隔几周会留出一些时间来处理他们的未解决问题，那时你才会得到答复。）
- en: So how do you use these facts to your favor?
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 那么你如何利用这些事实为自己谋利呢？
- en: '*Don’t assume that your problem is the same as someone else’s.* Support requests
    are not bugs! They may be generated by bugs, but every support request has its
    own individual flavor to it, and until its cause is pinned down to a specific
    technical issue, you’re muddying the waters if you decide that your problem is
    the same as some other complicated problem. Reference the existing bug or support
    request in your request and let the maintainer decide.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*不要假设你的问题和其他人的问题相同。* 支持请求不是 bug！它们可能由 bug 产生，但每个支持请求都有其独特的特点，直到其原因被确认为特定的技术问题之前，如果你决定你的问题与其他复杂问题相同，那么你只会搅混水。在你的请求中引用现有的
    bug 或支持请求，并让维护者决定。'
- en: '*Give me lots of information, even if you think it’s unnecessary.* Why did
    you make this support request? I can’t speak for everyone, but when I ask for
    help it’s usually because I believe that someone out there has a much more comprehensive
    big picture and because I believe that they will have some insight that I don’t
    have. So why do I have any reason to believe some debugging information that I
    think is useless won’t help someone who is much more attuned to the software divine
    the problem? Furthermore, if I am only looking at support requests once every
    two weeks, you better hope you’ve given me enough information to figure it out
    when I actually look at your request.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*提供大量信息，即使你认为这些信息是不必要的。* 你为什么提出这个支持请求？我不能代表每个人，但当我请求帮助时，通常是因为我相信有人拥有一个更全面的大局观，因为我相信他们会有一些我没有的见解。那么，我有什么理由相信一些我认为无用的调试信息不会帮助到比我更熟悉软件的人发现问题呢？此外，如果我每两周只看一次支持请求，你最好希望在我实际查看你的请求时给我足够的信息来解决问题。'
- en: 'Relatedly, don’t be tempted to “curate” the information: some of the worst
    debugging sessions I’ve had were because I misinterpreted some evidence I got,
    and then acted on that wrong assumption.'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 同样重要的是，不要试图“精选”信息：我经历过的一些最糟糕的调试会话之一就是因为我误解了一些证据，然后基于错误的假设采取行动。
- en: '*Make it easy for the maintainer to debug the problem.* Minimal test cases,
    minimal test cases, minimal test cases. It’s even better if it’s running code
    that doesn’t require any setting up, but frequently the specific setup will have
    the information the maintainer needs to figure out your problem.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*确保维护者能够轻松调试问题。* 最小化测试案例，最小化测试案例，最小化测试案例。如果能够提供无需任何设置即可运行的代码，那就更好了，但通常特定的设置将包含维护者需要解决你的问题所需的信息。'
- en: '*Do your own debugging.* You’ve handed the maintainer a problem that they don’t
    know an answer off the top of their head to. It might be a real bug. If they’re
    particularly accommodating, they’ll try to recreate your problem and then debug
    it from their local setup; if they’re not, they’ll try simulating their debugging
    process through you. You can tell that this is the case when the start asking
    you for specific pieces of information or tweaks. Don’t let them initiate this
    lengthy and time-consuming process: do your own debugging. Because you are seeing
    the problem, you are the best person to actually debug it.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*自己进行调试。* 你已经把一个维护者不知如何回答的问题交给了他们。这可能是一个真正的错误。如果他们特别愿意帮助，他们会尝试重现你的问题，然后从他们的本地设置进行调试；如果不愿意，他们会通过你来模拟调试过程。当他们开始要求你提供具体的信息或调整时，你就可以知道情况了。不要让他们启动这个漫长而耗时的过程：自己进行调试。因为你能看到问题，所以你是最适合实际进行调试的人。'
- en: '“But,” you might say, “Why should I voluntarily debug *other* people’s code!”
    This case is a little different: this is not legacy code where the original author
    is nowhere to be found: you have a benevolent upstream willing to help you out.
    You have someone to sanity check your results, tell you what tools to use (something
    like PHP will be easy to debug: just edit some source files; something like a
    C application is tougher, but gdb with debug symbols can work wonders), point
    you in the right direction and short-circuit the rest of the process when you
    tell them some key piece of information. The key bit is: if you have a question
    about the software, and you know an experiment you can run to answer that question,
    don’t ask: *run the experiment.*'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: “但是，”你可能会说，“我为什么要自愿调试别人的代码！”这种情况有点不同：这不是原作者不可见的遗留代码：你有一个愿意帮助你的上游。你有人来验证你的结果，告诉你要使用哪些工具（像PHP这样的东西很容易调试：只需编辑一些源文件；像C应用程序这样的东西更难，但带有调试符号的gdb可以起到奇效），指导你朝正确的方向前进，并在你告诉他们一些关键信息时快速解决其余的问题。关键在于：如果你对软件有疑问，并且知道可以运行实验来回答这个问题，不要问：*运行这个实验*。
- en: '*Make me fix my documentation.* I’m worried about answering your question,
    not necessarily about fixing my software. If there is some doc somewhere that
    was unclear, or some runtime check that could have prevented you from needing
    to ask your question, make me fix it by pointing it out! Different people absorb
    information differently, so it''s good if as many ways as possible to communicate
    some piece of information are available.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*促使我修复我的文档。* 我担心回答你的问题，而不一定担心修复我的软件。如果有些文档不清楚，或者有些运行时检查可以避免你需要提问，那么通过指出它来促使我修复它！不同的人以不同方式吸收信息，因此，如果能提供尽可能多的信息传达某些信息，那就很好。'
