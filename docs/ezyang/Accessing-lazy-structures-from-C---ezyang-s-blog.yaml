- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-07-01 18:17:39'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Accessing lazy structures from C : ezyang’s blog'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[http://blog.ezyang.com/2011/12/accessing-lazy-structures-from/](http://blog.ezyang.com/2011/12/accessing-lazy-structures-from/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Accessing lazy structures from C
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Someone [recently asked on haskell-beginners](http://comments.gmane.org/gmane.comp.lang.haskell.beginners/9109)
    how to access an lazy (and potentially infinite) data structure in C. I failed
    to find some example code on how to do this, so I wrote some myself. May this
    help you in your C calling Haskell endeavours!
  prefs: []
  type: TYPE_NORMAL
- en: 'The main file `Main.hs`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The C file `export.c`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'And a simple Cabal file to build it all:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Happy hacking!
  prefs: []
  type: TYPE_NORMAL
